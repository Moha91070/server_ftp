{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\wamp64\\\\www\\\\Cours Udemy Js\\\\my-ftp\\\\client\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\wamp64\\\\www\\\\Cours Udemy Js\\\\my-ftp\\\\client\",\"filename\":\"C:\\\\wamp64\\\\www\\\\Cours Udemy Js\\\\my-ftp\\\\client\\\\src\\\\main.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\wamp64\\\\www\\\\Cours Udemy Js\\\\my-ftp\\\\client\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\wamp64\\www\\Cours Udemy Js\\my-ftp\\client\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\wamp64\\www\\Cours Udemy Js\\my-ftp\\client",
      "filename": "C:\\wamp64\\www\\Cours Udemy Js\\my-ftp\\client\\src\\main.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\wamp64\\www\\Cours Udemy Js\\my-ftp\\client",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\wamp64\\www\\Cours Udemy Js\\my-ftp\\client\\src\\main.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\wamp64\\www\\Cours Udemy Js\\my-ftp\\client\\src\\main.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\wamp64\\www\\Cours Udemy Js\\my-ftp\\client\\src\\",
        "sourceFileName": "main.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connect = connect;\n\nvar _net = require(\"net\");\n\nvar _readline = _interopRequireDefault(require(\"readline\"));\n\nvar fs = _interopRequireWildcard(require(\"fs\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar rl = _readline[\"default\"].createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nvar dataSocket = null;\n\nfunction connect(host, port) {\n  var client = (0, _net.createConnection)(port, host, function () {\n    console.log('connected to server');\n    initializeDataServer();\n    rl.question('ftp@' + host + ':' + port + \": \", function (command) {\n      client.write(command);\n    });\n    client.on('data', function (data) {\n      console.log(data.toString() + _typeof(data));\n      var message = data.toString();\n\n      var _message$trim$split = message.trim().split(' '),\n          _message$trim$split2 = _toArray(_message$trim$split),\n          status = _message$trim$split2[0],\n          args = _message$trim$split2.slice(1);\n\n      if (status === \"221\") {\n        process.exit();\n      }\n\n      rl.question('ftp@' + host + ':' + port + \"$\", function (command) {\n        var _command$trim$split = command.trim().split(' '),\n            _command$trim$split2 = _toArray(_command$trim$split),\n            commande = _command$trim$split2[0],\n            args = _command$trim$split2.slice(1);\n\n        if (commande === 'STOR') {\n          client.write(command);\n          var read = fs.createReadStream(args[0]);\n          read.on('data', function (data) {\n            dataSocket.write(data.toString());\n          });\n          read.on('end', function () {\n            dataSocket.write(\"226 file ok\");\n          }); //dataSocket.write(command);\n        } else {\n          client.write(command);\n        }\n      });\n    });\n  });\n}\n\nfunction initializeDataServer() {\n  var server = (0, _net.createServer)(function (socket) {\n    console.log(\"new connection.\");\n    dataSocket = socket;\n    socket.on(\"data\", function (data) {\n      fs.writeFileSync(\"./temp.json\", data.toString());\n    });\n  });\n  server.listen(4243, function () {\n    console.log(\"dataServer started at localhost: 4243\");\n  });\n}\n\nconnect(\"localhost\", 4242);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsicmwiLCJyZWFkbGluZSIsImNyZWF0ZUludGVyZmFjZSIsImlucHV0IiwicHJvY2VzcyIsInN0ZGluIiwib3V0cHV0Iiwic3Rkb3V0IiwiZGF0YVNvY2tldCIsImNvbm5lY3QiLCJob3N0IiwicG9ydCIsImNsaWVudCIsImNvbnNvbGUiLCJsb2ciLCJpbml0aWFsaXplRGF0YVNlcnZlciIsInF1ZXN0aW9uIiwiY29tbWFuZCIsIndyaXRlIiwib24iLCJkYXRhIiwidG9TdHJpbmciLCJtZXNzYWdlIiwidHJpbSIsInNwbGl0Iiwic3RhdHVzIiwiYXJncyIsImV4aXQiLCJjb21tYW5kZSIsInJlYWQiLCJmcyIsImNyZWF0ZVJlYWRTdHJlYW0iLCJzZXJ2ZXIiLCJzb2NrZXQiLCJ3cml0ZUZpbGVTeW5jIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxFQUFFLEdBQUdDLHFCQUFTQyxlQUFULENBQXlCO0FBQ2hDQyxFQUFBQSxLQUFLLEVBQUVDLE9BQU8sQ0FBQ0MsS0FEaUI7QUFFaENDLEVBQUFBLE1BQU0sRUFBRUYsT0FBTyxDQUFDRztBQUZnQixDQUF6QixDQUFYOztBQUtBLElBQUlDLFVBQVUsR0FBRyxJQUFqQjs7QUFFTyxTQUFTQyxPQUFULENBQWlCQyxJQUFqQixFQUF1QkMsSUFBdkIsRUFBNkI7QUFDaEMsTUFBTUMsTUFBTSxHQUFHLDJCQUFpQkQsSUFBakIsRUFBdUJELElBQXZCLEVBQTZCLFlBQU07QUFDOUNHLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHFCQUFaO0FBQ0FDLElBQUFBLG9CQUFvQjtBQUNwQmYsSUFBQUEsRUFBRSxDQUFDZ0IsUUFBSCxDQUFZLFNBQVNOLElBQVQsR0FBZ0IsR0FBaEIsR0FBc0JDLElBQXRCLEdBQTZCLElBQXpDLEVBQStDLFVBQVNNLE9BQVQsRUFBa0I7QUFDN0RMLE1BQUFBLE1BQU0sQ0FBQ00sS0FBUCxDQUFhRCxPQUFiO0FBQ0gsS0FGRDtBQUdBTCxJQUFBQSxNQUFNLENBQUNPLEVBQVAsQ0FBVSxNQUFWLEVBQWtCLFVBQUNDLElBQUQsRUFBVTtBQUN4QlAsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlNLElBQUksQ0FBQ0MsUUFBTCxhQUF5QkQsSUFBekIsQ0FBWjtBQUNBLFVBQU1FLE9BQU8sR0FBR0YsSUFBSSxDQUFDQyxRQUFMLEVBQWhCOztBQUNBLGdDQUEwQkMsT0FBTyxDQUFDQyxJQUFSLEdBQWVDLEtBQWYsQ0FBcUIsR0FBckIsQ0FBMUI7QUFBQTtBQUFBLFVBQU9DLE1BQVA7QUFBQSxVQUFrQkMsSUFBbEI7O0FBQ0EsVUFBR0QsTUFBTSxLQUFLLEtBQWQsRUFBb0I7QUFDaEJyQixRQUFBQSxPQUFPLENBQUN1QixJQUFSO0FBQ0g7O0FBQ0QzQixNQUFBQSxFQUFFLENBQUNnQixRQUFILENBQVksU0FBU04sSUFBVCxHQUFnQixHQUFoQixHQUFzQkMsSUFBdEIsR0FBNkIsR0FBekMsRUFBOEMsVUFBU00sT0FBVCxFQUFrQjtBQUM1RCxrQ0FBNEJBLE9BQU8sQ0FBQ00sSUFBUixHQUFlQyxLQUFmLENBQXFCLEdBQXJCLENBQTVCO0FBQUE7QUFBQSxZQUFPSSxRQUFQO0FBQUEsWUFBb0JGLElBQXBCOztBQUNBLFlBQUlFLFFBQVEsS0FBSyxNQUFqQixFQUF3QjtBQUNwQmhCLFVBQUFBLE1BQU0sQ0FBQ00sS0FBUCxDQUFhRCxPQUFiO0FBQ0EsY0FBSVksSUFBSSxHQUFHQyxFQUFFLENBQUNDLGdCQUFILENBQW9CTCxJQUFJLENBQUMsQ0FBRCxDQUF4QixDQUFYO0FBQ0FHLFVBQUFBLElBQUksQ0FBQ1YsRUFBTCxDQUFRLE1BQVIsRUFBZ0IsVUFBQ0MsSUFBRCxFQUFVO0FBQ3RCWixZQUFBQSxVQUFVLENBQUNVLEtBQVgsQ0FBaUJFLElBQUksQ0FBQ0MsUUFBTCxFQUFqQjtBQUNILFdBRkQ7QUFHQVEsVUFBQUEsSUFBSSxDQUFDVixFQUFMLENBQVEsS0FBUixFQUFlLFlBQU07QUFDakJYLFlBQUFBLFVBQVUsQ0FBQ1UsS0FBWCxDQUFpQixhQUFqQjtBQUNILFdBRkQsRUFOb0IsQ0FTcEI7QUFDSCxTQVZELE1BVU87QUFDSE4sVUFBQUEsTUFBTSxDQUFDTSxLQUFQLENBQWFELE9BQWI7QUFDSDtBQUNKLE9BZkQ7QUFnQkgsS0F2QkQ7QUF3QkgsR0E5QmMsQ0FBZjtBQStCSDs7QUFFRCxTQUFTRixvQkFBVCxHQUErQjtBQUMzQixNQUFNaUIsTUFBTSxHQUFHLHVCQUFhLFVBQUNDLE1BQUQsRUFBWTtBQUNwQ3BCLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGlCQUFaO0FBQ0FOLElBQUFBLFVBQVUsR0FBR3lCLE1BQWI7QUFDQUEsSUFBQUEsTUFBTSxDQUFDZCxFQUFQLENBQVUsTUFBVixFQUFrQixVQUFDQyxJQUFELEVBQVU7QUFDeEJVLE1BQUFBLEVBQUUsQ0FBQ0ksYUFBSCxDQUFpQixhQUFqQixFQUFnQ2QsSUFBSSxDQUFDQyxRQUFMLEVBQWhDO0FBQ0gsS0FGRDtBQUdILEdBTmMsQ0FBZjtBQU9BVyxFQUFBQSxNQUFNLENBQUNHLE1BQVAsQ0FBYyxJQUFkLEVBQW9CLFlBQU07QUFDdEJ0QixJQUFBQSxPQUFPLENBQUNDLEdBQVI7QUFDSCxHQUZEO0FBR0g7O0FBRURMLE9BQU8sQ0FBQyxXQUFELEVBQWEsSUFBYixDQUFQIiwic291cmNlUm9vdCI6IkM6XFx3YW1wNjRcXHd3d1xcQ291cnMgVWRlbXkgSnNcXG15LWZ0cFxcY2xpZW50XFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Y3JlYXRlQ29ubmVjdGlvbiwgY3JlYXRlU2VydmVyfSBmcm9tICduZXQnO1xyXG5pbXBvcnQgcmVhZGxpbmUgZnJvbSAncmVhZGxpbmUnO1xyXG5pbXBvcnQgKiBhcyBmcyBmcm9tIFwiZnNcIjtcclxuXHJcbmNvbnN0IHJsID0gcmVhZGxpbmUuY3JlYXRlSW50ZXJmYWNlKHtcclxuICAgIGlucHV0OiBwcm9jZXNzLnN0ZGluLFxyXG4gICAgb3V0cHV0OiBwcm9jZXNzLnN0ZG91dFxyXG59KTtcclxuXHJcbmxldCBkYXRhU29ja2V0ID0gbnVsbDtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjb25uZWN0KGhvc3QsIHBvcnQpIHtcclxuICAgIGNvbnN0IGNsaWVudCA9IGNyZWF0ZUNvbm5lY3Rpb24ocG9ydCwgaG9zdCwgKCkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdjb25uZWN0ZWQgdG8gc2VydmVyJyk7XHJcbiAgICAgICAgaW5pdGlhbGl6ZURhdGFTZXJ2ZXIoKTtcclxuICAgICAgICBybC5xdWVzdGlvbignZnRwQCcgKyBob3N0ICsgJzonICsgcG9ydCArIFwiOiBcIiwgZnVuY3Rpb24oY29tbWFuZCkge1xyXG4gICAgICAgICAgICBjbGllbnQud3JpdGUoY29tbWFuZCk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICBjbGllbnQub24oJ2RhdGEnLCAoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhLnRvU3RyaW5nKCkgKyB0eXBlb2YoZGF0YSkpO1xyXG4gICAgICAgICAgICBjb25zdCBtZXNzYWdlID0gZGF0YS50b1N0cmluZygpO1xyXG4gICAgICAgICAgICBjb25zdCBbc3RhdHVzLCAuLi5hcmdzXSA9IG1lc3NhZ2UudHJpbSgpLnNwbGl0KCcgJyk7XHJcbiAgICAgICAgICAgIGlmKHN0YXR1cyA9PT0gXCIyMjFcIil7XHJcbiAgICAgICAgICAgICAgICBwcm9jZXNzLmV4aXQoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBybC5xdWVzdGlvbignZnRwQCcgKyBob3N0ICsgJzonICsgcG9ydCArIFwiJFwiLCBmdW5jdGlvbihjb21tYW5kKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBbY29tbWFuZGUsIC4uLmFyZ3NdID0gY29tbWFuZC50cmltKCkuc3BsaXQoJyAnKTtcclxuICAgICAgICAgICAgICAgIGlmIChjb21tYW5kZSA9PT0gJ1NUT1InKXtcclxuICAgICAgICAgICAgICAgICAgICBjbGllbnQud3JpdGUoY29tbWFuZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHJlYWQgPSBmcy5jcmVhdGVSZWFkU3RyZWFtKGFyZ3NbMF0pO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlYWQub24oJ2RhdGEnLCAoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhU29ja2V0LndyaXRlKGRhdGEudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICByZWFkLm9uKCdlbmQnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFTb2NrZXQud3JpdGUoXCIyMjYgZmlsZSBva1wiKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAvL2RhdGFTb2NrZXQud3JpdGUoY29tbWFuZCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGNsaWVudC53cml0ZShjb21tYW5kKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KVxyXG4gICAgfSlcclxufVxyXG5cclxuZnVuY3Rpb24gaW5pdGlhbGl6ZURhdGFTZXJ2ZXIoKXtcclxuICAgIGNvbnN0IHNlcnZlciA9IGNyZWF0ZVNlcnZlcigoc29ja2V0KSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJuZXcgY29ubmVjdGlvbi5cIik7XHJcbiAgICAgICAgZGF0YVNvY2tldCA9IHNvY2tldDtcclxuICAgICAgICBzb2NrZXQub24oXCJkYXRhXCIsIChkYXRhKSA9PiB7XHJcbiAgICAgICAgICAgIGZzLndyaXRlRmlsZVN5bmMoXCIuL3RlbXAuanNvblwiLCBkYXRhLnRvU3RyaW5nKCkpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICBzZXJ2ZXIubGlzdGVuKDQyNDMsICgpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhgZGF0YVNlcnZlciBzdGFydGVkIGF0IGxvY2FsaG9zdDogNDI0M2ApO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmNvbm5lY3QoXCJsb2NhbGhvc3RcIiw0MjQyKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "main.js"
      ],
      "names": [
        "rl",
        "readline",
        "createInterface",
        "input",
        "process",
        "stdin",
        "output",
        "stdout",
        "dataSocket",
        "connect",
        "host",
        "port",
        "client",
        "console",
        "log",
        "initializeDataServer",
        "question",
        "command",
        "write",
        "on",
        "data",
        "toString",
        "message",
        "trim",
        "split",
        "status",
        "args",
        "exit",
        "commande",
        "read",
        "fs",
        "createReadStream",
        "server",
        "socket",
        "writeFileSync",
        "listen"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,EAAE,GAAGC,qBAASC,eAAT,CAAyB;AAChCC,EAAAA,KAAK,EAAEC,OAAO,CAACC,KADiB;AAEhCC,EAAAA,MAAM,EAAEF,OAAO,CAACG;AAFgB,CAAzB,CAAX;;AAKA,IAAIC,UAAU,GAAG,IAAjB;;AAEO,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6B;AAChC,MAAMC,MAAM,GAAG,2BAAiBD,IAAjB,EAAuBD,IAAvB,EAA6B,YAAM;AAC9CG,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAC,IAAAA,oBAAoB;AACpBf,IAAAA,EAAE,CAACgB,QAAH,CAAY,SAASN,IAAT,GAAgB,GAAhB,GAAsBC,IAAtB,GAA6B,IAAzC,EAA+C,UAASM,OAAT,EAAkB;AAC7DL,MAAAA,MAAM,CAACM,KAAP,CAAaD,OAAb;AACH,KAFD;AAGAL,IAAAA,MAAM,CAACO,EAAP,CAAU,MAAV,EAAkB,UAACC,IAAD,EAAU;AACxBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,IAAI,CAACC,QAAL,aAAyBD,IAAzB,CAAZ;AACA,UAAME,OAAO,GAAGF,IAAI,CAACC,QAAL,EAAhB;;AACA,gCAA0BC,OAAO,CAACC,IAAR,GAAeC,KAAf,CAAqB,GAArB,CAA1B;AAAA;AAAA,UAAOC,MAAP;AAAA,UAAkBC,IAAlB;;AACA,UAAGD,MAAM,KAAK,KAAd,EAAoB;AAChBrB,QAAAA,OAAO,CAACuB,IAAR;AACH;;AACD3B,MAAAA,EAAE,CAACgB,QAAH,CAAY,SAASN,IAAT,GAAgB,GAAhB,GAAsBC,IAAtB,GAA6B,GAAzC,EAA8C,UAASM,OAAT,EAAkB;AAC5D,kCAA4BA,OAAO,CAACM,IAAR,GAAeC,KAAf,CAAqB,GAArB,CAA5B;AAAA;AAAA,YAAOI,QAAP;AAAA,YAAoBF,IAApB;;AACA,YAAIE,QAAQ,KAAK,MAAjB,EAAwB;AACpBhB,UAAAA,MAAM,CAACM,KAAP,CAAaD,OAAb;AACA,cAAIY,IAAI,GAAGC,EAAE,CAACC,gBAAH,CAAoBL,IAAI,CAAC,CAAD,CAAxB,CAAX;AACAG,UAAAA,IAAI,CAACV,EAAL,CAAQ,MAAR,EAAgB,UAACC,IAAD,EAAU;AACtBZ,YAAAA,UAAU,CAACU,KAAX,CAAiBE,IAAI,CAACC,QAAL,EAAjB;AACH,WAFD;AAGAQ,UAAAA,IAAI,CAACV,EAAL,CAAQ,KAAR,EAAe,YAAM;AACjBX,YAAAA,UAAU,CAACU,KAAX,CAAiB,aAAjB;AACH,WAFD,EANoB,CASpB;AACH,SAVD,MAUO;AACHN,UAAAA,MAAM,CAACM,KAAP,CAAaD,OAAb;AACH;AACJ,OAfD;AAgBH,KAvBD;AAwBH,GA9Bc,CAAf;AA+BH;;AAED,SAASF,oBAAT,GAA+B;AAC3B,MAAMiB,MAAM,GAAG,uBAAa,UAACC,MAAD,EAAY;AACpCpB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAN,IAAAA,UAAU,GAAGyB,MAAb;AACAA,IAAAA,MAAM,CAACd,EAAP,CAAU,MAAV,EAAkB,UAACC,IAAD,EAAU;AACxBU,MAAAA,EAAE,CAACI,aAAH,CAAiB,aAAjB,EAAgCd,IAAI,CAACC,QAAL,EAAhC;AACH,KAFD;AAGH,GANc,CAAf;AAOAW,EAAAA,MAAM,CAACG,MAAP,CAAc,IAAd,EAAoB,YAAM;AACtBtB,IAAAA,OAAO,CAACC,GAAR;AACH,GAFD;AAGH;;AAEDL,OAAO,CAAC,WAAD,EAAa,IAAb,CAAP",
      "sourceRoot": "C:\\wamp64\\www\\Cours Udemy Js\\my-ftp\\client\\src\\",
      "sourcesContent": [
        "import {createConnection, createServer} from 'net';\r\nimport readline from 'readline';\r\nimport * as fs from \"fs\";\r\n\r\nconst rl = readline.createInterface({\r\n    input: process.stdin,\r\n    output: process.stdout\r\n});\r\n\r\nlet dataSocket = null;\r\n\r\nexport function connect(host, port) {\r\n    const client = createConnection(port, host, () => {\r\n        console.log('connected to server');\r\n        initializeDataServer();\r\n        rl.question('ftp@' + host + ':' + port + \": \", function(command) {\r\n            client.write(command);\r\n        })\r\n        client.on('data', (data) => {\r\n            console.log(data.toString() + typeof(data));\r\n            const message = data.toString();\r\n            const [status, ...args] = message.trim().split(' ');\r\n            if(status === \"221\"){\r\n                process.exit();\r\n            }\r\n            rl.question('ftp@' + host + ':' + port + \"$\", function(command) {\r\n                const [commande, ...args] = command.trim().split(' ');\r\n                if (commande === 'STOR'){\r\n                    client.write(command);\r\n                    let read = fs.createReadStream(args[0]);\r\n                    read.on('data', (data) => {\r\n                        dataSocket.write(data.toString());\r\n                    })\r\n                    read.on('end', () => {\r\n                        dataSocket.write(\"226 file ok\");\r\n                    });\r\n                    //dataSocket.write(command);\r\n                } else {\r\n                    client.write(command);\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction initializeDataServer(){\r\n    const server = createServer((socket) => {\r\n        console.log(\"new connection.\");\r\n        dataSocket = socket;\r\n        socket.on(\"data\", (data) => {\r\n            fs.writeFileSync(\"./temp.json\", data.toString());\r\n        });\r\n    });\r\n    server.listen(4243, () => {\r\n        console.log(`dataServer started at localhost: 4243`);\r\n    });\r\n}\r\n\r\nconnect(\"localhost\",4242);"
      ]
    },
    "sourceType": "script",
    "mtime": 1639049446185
  }
}